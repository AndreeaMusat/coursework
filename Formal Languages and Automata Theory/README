MUÅžAT Andreea-Alexandra
CA333                                                                         
 
The program reads a context free grammar from an input file and then can
check whether:
- the language generated by the grammar is empty (--is-void)
- the langugae generated by the grammar contains the empty string (--has-e)
and also prints the useless nonterminals (--useless-nonterminals)
                                                       
Structura arhiva: 
- lexer.lex -> se face parsarea input-ului folosind flex
- grammar.cpp -> clase ajutatoare pentru stocarea datelor obtinute in urma
parsarii si pentru raspunderea la cele 3 intrebari (has e, is void, useless
nonterminals)
Parsarea se face cu 5 reguli mari: v, e, r, s si empty_set, unde:
- v face matching pe prima componenta a gramaticii - de la "(" pana la 
prima virgula, ignorand spatiile - apoi sunt adaugate symbolurile in campul
v al obiectului g de tip grammar
- e face matching pe a doua componenta a gramaticii (in cazul nevid), analog 
- r face matching pe a treia componenta - intre a treia "{" si a treia ",", 
tot in cazul nevid
- s face matching pe simbolul de start
- empty_set face matching pe "{}" (cu oricate spatii)
La fiecare potrivire ne asiguram ca a fost deja gasita componenta precedenta. 
Daca se gaseste in input orice nu se potriveste cu una dintre aceste reguli, 
atunci a fost gasita o eroare de sintaxa.
